{"mappings":"ACAA,MAAM,EAAoB,SAAS,aAAa,CAAC,iBAC3C,EAAY,SAAS,aAAa,CAAC,eACnC,EAAoB,SAAS,aAAa,CAAC,yBAE3C,EAAe,SAAS,aAAa,CAAC,qBACtC,EAAY,SAAS,aAAa,CAAC,eACnC,EAAa,SAAS,aAAa,CAAC,gBACpC,EAAW,SAAS,aAAa,CAAC,cAClC,EAAgB,SAAS,aAAa,CAAC,oBACxB,SAAS,aAAa,CAAC,mBAE5C,MAAM,EAAY,KAChB,EAAU,SAAS,CAAC,MAAM,CAAC,YAC3B,EAAU,SAAS,CAAC,GAAG,CAAC,UAC1B,EACM,EAAa,KACjB,EAAU,SAAS,CAAC,MAAM,CAAC,WAC3B,EAAU,SAAS,CAAC,GAAG,CAAC,WAC1B,EAEM,EAA0B,SAAS,aAAa,CAAC,mBAEvD,IAAI,EAAe,KAEnB,MAAM,EAAkB,MAAM,IAC5B,GAAI,EAAE,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,gBAAiB,OAEjD,IAAM,EAAK,EAAE,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,CAEjC,IAEL,aACA,WAAW,KACT,eACF,EAAG,KAEH,EAAkB,GAClB,IAEA,SAAS,gBAAgB,CAAC,UAAW,GACvC,EAEM,EAAqB,AAAA,IACrB,CAAA,AAAU,WAAV,EAAE,GAAG,EAAiB,AAAU,QAAV,EAAE,GAAG,AAAK,GAClC,GAEJ,EAEM,EAAkB,KAEtB,IAAM,EAAmB,aAAa,OAAO,CAAC,gBAU9C,OAPI,AAAgC,MAAhC,KAAK,KAAK,CAAC,GACE,EAAE,CAGF,KAAK,KAAK,CAAC,EAI9B,EA6BA,EAAkB,gBAAgB,CAAC,QAAS,GAC5C,EAAkB,gBAAgB,CAAC,QAAS,GAC5C,EAAwB,gBAAgB,CAAC,QA7Bf,KAIxB,IAAM,EAAe,IAGrB,GAF0B,EAAa,IAAI,CAAC,AAAA,GAAQ,EAAK,GAAG,GAAK,EAAa,GAAG,EAE1D,CAKrB,IAAM,EAA0B,KAAK,SAAS,CAHlB,EAAa,MAAM,CAAC,AAAA,GAAQ,EAAK,GAAG,GAAK,EAAa,GAAG,GAIrF,aAAa,OAAO,CAAC,eAAgB,GAGrC,EAAwB,WAAW,CAAG,sBACxC,KAAO,CACL,EAAa,IAAI,CAAC,GAClB,IAAM,EAA0B,KAAK,SAAS,CAAC,GAC/C,aAAa,OAAO,CAAC,eAAgB,GAGrC,EAAwB,WAAW,CAAG,2BACxC,CACF,GAMA,MAAM,EAAoB,MAAM,IAC9B,IAAM,EAAM,CAAC,0CAA0C,EAAE,EAAG,CAAC,CAEvD,EAAM,MAAM,MAAM,GAClB,EAAO,MAAM,EAAI,IAAI,GAErB,CAAA,OAAE,CAAM,CAAA,MAAE,CAAK,CAAA,YAAE,CAAW,CAAA,WAAE,CAAU,CAAA,mBAAE,CAAkB,CAAE,CAAG,CAEvE,CAAA,EAAU,WAAW,CAAG,EACxB,EAAW,WAAW,CAAG,EACzB,EAAS,WAAW,CAAG,EAEvB,EAAa,YAAY,CAAC,MAAO,GACjC,EAAc,YAAY,CAAC,OAAQ,GAEnC,EAAe,EAGW,AADL,IACkB,IAAI,CAAC,AAAA,GAAQ,EAAK,GAAG,GAAK,EAAa,GAAG,EAG/E,EAAwB,WAAW,CAAG,4BAItC,EAAwB,WAAW,CAAG,sBAEzC","sources":["<anon>","src/js/book-modal.mjs"],"sourcesContent":["var $2fb3e2c4b883af87$exports = {};\nconst $2fb3e2c4b883af87$var$bookListContainer = document.querySelector(\".bl-container\");\nconst $2fb3e2c4b883af87$var$bookModal = document.querySelector(\"#book-modal\");\nconst $2fb3e2c4b883af87$var$bookModalCloseBtn = document.querySelector(\"#book-modal-close-btn\");\nconst $2fb3e2c4b883af87$var$bookModalImg = document.querySelector(\"#book-modal-image\");\nconst $2fb3e2c4b883af87$var$bookTitle = document.querySelector(\"#book-title\");\nconst $2fb3e2c4b883af87$var$bookAuthor = document.querySelector(\"#book-author\");\nconst $2fb3e2c4b883af87$var$bookDesc = document.querySelector(\"#book-desc\");\nconst $2fb3e2c4b883af87$var$bookAmazonUrl = document.querySelector(\"#book-amazon-url\");\nconst $2fb3e2c4b883af87$var$bookModalBtn = document.querySelector(\"#book-modal-btn\");\nconst $2fb3e2c4b883af87$var$showModal = ()=>{\n    $2fb3e2c4b883af87$var$bookModal.classList.remove(\"fade-out\");\n    $2fb3e2c4b883af87$var$bookModal.classList.add(\"fade-in\");\n};\nconst $2fb3e2c4b883af87$var$closeModal = ()=>{\n    $2fb3e2c4b883af87$var$bookModal.classList.remove(\"fade-in\");\n    $2fb3e2c4b883af87$var$bookModal.classList.add(\"fade-out\");\n};\nconst $2fb3e2c4b883af87$var$addToShoppingListButton = document.querySelector(\"#book-modal-btn\");\nlet $2fb3e2c4b883af87$var$selectedBook = null;\nconst $2fb3e2c4b883af87$var$handleBookClick = async (e)=>{\n    if (e.target.classList.contains(\"bl-container\")) return;\n    const id = e.target.closest(\"[id]\").id;\n    if (!id) return;\n    showLoader();\n    setTimeout(()=>{\n        disableLoader();\n    }, 400);\n    $2fb3e2c4b883af87$var$fetchSpecificBook(id);\n    $2fb3e2c4b883af87$var$showModal();\n    document.addEventListener(\"keydown\", $2fb3e2c4b883af87$var$closeModalOnEscape);\n};\nconst $2fb3e2c4b883af87$var$closeModalOnEscape = (e)=>{\n    if (e.key === \"Escape\" || e.key === \"Esc\") $2fb3e2c4b883af87$var$closeModal();\n};\nconst $2fb3e2c4b883af87$var$getShoppingList = ()=>{\n    // Dodaj selectedBook do localStorage\n    const shoppingListJson = localStorage.getItem(\"shoppingList\");\n    let shoppingList;\n    if (JSON.parse(shoppingListJson) == null) shoppingList = [];\n    else shoppingList = JSON.parse(shoppingListJson);\n    return shoppingList;\n};\nconst $2fb3e2c4b883af87$var$addToShoppingList = ()=>{\n    //some() sprawdza, czy w tablicy shoppingList istnieje przynajmniej jedna książka, której identyfikator id jest równy identyfikatorowi wybranej książki - selectedBook.id. Jeśli choć jedna książka o takim identyfikatorze istnieje w liście zakupów, zmienna bookAlreadyInList będzie miała wartość true\n    //Mogłabym użyć find(), ale wtedy metoda zwraca ten znaleziony element, a nie wartość logiczna true lub false\n    const shoppingList = $2fb3e2c4b883af87$var$getShoppingList();\n    const bookAlreadyInList = shoppingList.some((book)=>book._id === $2fb3e2c4b883af87$var$selectedBook._id);\n    if (bookAlreadyInList) {\n        // jeśli książka selectedBook istnieje już w shoppingList to używając metody filter() tworzą nową tablicę zawierającą tylko te elementy, które spełaniają warunek funksji zwrotnej. Więc  updatedShoppingList zawiera wszystkie elementy z shoppingList, które nie mają tego samego identyfikatora co selectedBook. To jest wykorzystywane do usuwania wybranej książki z listy zakupów.\n        const updatedShoppingList = shoppingList.filter((book)=>book._id !== $2fb3e2c4b883af87$var$selectedBook._id);\n        // cały zaktualizowany koszyk zamieniam na stringa i wrzucam do local storage\n        const updatedShoppingListJson = JSON.stringify(updatedShoppingList);\n        localStorage.setItem(\"shoppingList\", updatedShoppingListJson);\n        $2fb3e2c4b883af87$var$addToShoppingListButton.textContent = \"Add to Shopping List\";\n    } else {\n        shoppingList.push($2fb3e2c4b883af87$var$selectedBook);\n        const updatedShoppingListJson = JSON.stringify(shoppingList);\n        localStorage.setItem(\"shoppingList\", updatedShoppingListJson);\n        // zmiana nazwy przycisku\n        $2fb3e2c4b883af87$var$addToShoppingListButton.textContent = \"Remove from Shopping List\";\n    }\n};\n$2fb3e2c4b883af87$var$bookModalCloseBtn.addEventListener(\"click\", $2fb3e2c4b883af87$var$closeModal);\n$2fb3e2c4b883af87$var$bookListContainer.addEventListener(\"click\", $2fb3e2c4b883af87$var$handleBookClick);\n$2fb3e2c4b883af87$var$addToShoppingListButton.addEventListener(\"click\", $2fb3e2c4b883af87$var$addToShoppingList);\nconst $2fb3e2c4b883af87$var$fetchSpecificBook = async (id)=>{\n    const url = `https://books-backend.p.goit.global/books/${id}`;\n    const res = await fetch(url);\n    const data = await res.json();\n    const { author: author, title: title, description: description, book_image: book_image, amazon_product_url: amazon_product_url } = data;\n    $2fb3e2c4b883af87$var$bookTitle.textContent = title;\n    $2fb3e2c4b883af87$var$bookAuthor.textContent = author;\n    $2fb3e2c4b883af87$var$bookDesc.textContent = description;\n    $2fb3e2c4b883af87$var$bookModalImg.setAttribute(\"src\", book_image);\n    $2fb3e2c4b883af87$var$bookAmazonUrl.setAttribute(\"href\", amazon_product_url);\n    $2fb3e2c4b883af87$var$selectedBook = data;\n    const shoppingList = $2fb3e2c4b883af87$var$getShoppingList();\n    const bookAlreadyInList = shoppingList.some((book)=>book._id === $2fb3e2c4b883af87$var$selectedBook._id);\n    if (bookAlreadyInList) $2fb3e2c4b883af87$var$addToShoppingListButton.textContent = \"Remove from Shopping List\";\n    else $2fb3e2c4b883af87$var$addToShoppingListButton.textContent = \"Add to Shopping List\";\n};\n\n\n//# sourceMappingURL=index.6f51ff68.js.map\n","const bookListContainer = document.querySelector('.bl-container');\nconst bookModal = document.querySelector('#book-modal');\nconst bookModalCloseBtn = document.querySelector('#book-modal-close-btn');\n\nconst bookModalImg = document.querySelector('#book-modal-image');\nconst bookTitle = document.querySelector('#book-title');\nconst bookAuthor = document.querySelector('#book-author');\nconst bookDesc = document.querySelector('#book-desc');\nconst bookAmazonUrl = document.querySelector('#book-amazon-url');\nconst bookModalBtn = document.querySelector('#book-modal-btn');\n\nconst showModal = () => {\n  bookModal.classList.remove('fade-out');\n  bookModal.classList.add('fade-in');\n};\nconst closeModal = () => {\n  bookModal.classList.remove('fade-in');\n  bookModal.classList.add('fade-out');\n};\n\nconst addToShoppingListButton = document.querySelector(\"#book-modal-btn\");\n\nlet selectedBook = null;\n\nconst handleBookClick = async e => {\n  if (e.target.classList.contains('bl-container')) return;\n\n  const id = e.target.closest('[id]').id;\n\n  if (!id) return;\n\n  showLoader();\n  setTimeout(() => {\n    disableLoader();\n  }, 400);\n\n  fetchSpecificBook(id);\n  showModal();\n\n  document.addEventListener('keydown', closeModalOnEscape);\n};\n\nconst closeModalOnEscape = e => {\n  if (e.key === 'Escape' || e.key === 'Esc') {\n    closeModal();\n  }\n};\n\nconst getShoppingList = () => {\n  // Dodaj selectedBook do localStorage\n  const shoppingListJson = localStorage.getItem('shoppingList');\n  let shoppingList;\n  \n  if (JSON.parse(shoppingListJson) == null) {\n    shoppingList = [];\n  }\n  else {\n    shoppingList = JSON.parse(shoppingListJson);\n  }\n\n  return shoppingList\n}\n\nconst addToShoppingList = () => {\n  \n  //some() sprawdza, czy w tablicy shoppingList istnieje przynajmniej jedna książka, której identyfikator id jest równy identyfikatorowi wybranej książki - selectedBook.id. Jeśli choć jedna książka o takim identyfikatorze istnieje w liście zakupów, zmienna bookAlreadyInList będzie miała wartość true\n  //Mogłabym użyć find(), ale wtedy metoda zwraca ten znaleziony element, a nie wartość logiczna true lub false\n  const shoppingList = getShoppingList();\n  const bookAlreadyInList = shoppingList.some(book => book._id === selectedBook._id);\n\n  if (bookAlreadyInList) {\n    // jeśli książka selectedBook istnieje już w shoppingList to używając metody filter() tworzą nową tablicę zawierającą tylko te elementy, które spełaniają warunek funksji zwrotnej. Więc  updatedShoppingList zawiera wszystkie elementy z shoppingList, które nie mają tego samego identyfikatora co selectedBook. To jest wykorzystywane do usuwania wybranej książki z listy zakupów.\n    const updatedShoppingList = shoppingList.filter(book => book._id !== selectedBook._id);\n\n    // cały zaktualizowany koszyk zamieniam na stringa i wrzucam do local storage\n    const updatedShoppingListJson = JSON.stringify(updatedShoppingList);\n    localStorage.setItem('shoppingList', updatedShoppingListJson);\n\n   \n    addToShoppingListButton.textContent = \"Add to Shopping List\";\n  } else {\n    shoppingList.push(selectedBook);\n    const updatedShoppingListJson = JSON.stringify(shoppingList);\n    localStorage.setItem('shoppingList', updatedShoppingListJson);\n\n    // zmiana nazwy przycisku\n    addToShoppingListButton.textContent = \"Remove from Shopping List\";\n  }\n};\n\nbookModalCloseBtn.addEventListener('click', closeModal);\nbookListContainer.addEventListener('click', handleBookClick);\naddToShoppingListButton.addEventListener('click', addToShoppingList);\n\nconst fetchSpecificBook = async id => {\n  const url = `https://books-backend.p.goit.global/books/${id}`;\n\n  const res = await fetch(url);\n  const data = await res.json();\n\n  const { author, title, description, book_image, amazon_product_url } = data;\n\n  bookTitle.textContent = title;\n  bookAuthor.textContent = author;\n  bookDesc.textContent = description;\n\n  bookModalImg.setAttribute('src', book_image);\n  bookAmazonUrl.setAttribute('href', amazon_product_url);\n  \n  selectedBook = data;\n\n  const shoppingList = getShoppingList();\n  const bookAlreadyInList = shoppingList.some(book => book._id === selectedBook._id);\n\n  if (bookAlreadyInList) {\n    addToShoppingListButton.textContent = \"Remove from Shopping List\";\n\n  }\n  else {\n    addToShoppingListButton.textContent = \"Add to Shopping List\";\n  }\n };"],"names":["$2fb3e2c4b883af87$var$bookListContainer","document","querySelector","$2fb3e2c4b883af87$var$bookModal","$2fb3e2c4b883af87$var$bookModalCloseBtn","$2fb3e2c4b883af87$var$bookModalImg","$2fb3e2c4b883af87$var$bookTitle","$2fb3e2c4b883af87$var$bookAuthor","$2fb3e2c4b883af87$var$bookDesc","$2fb3e2c4b883af87$var$bookAmazonUrl","$2fb3e2c4b883af87$var$showModal","classList","remove","add","$2fb3e2c4b883af87$var$closeModal","$2fb3e2c4b883af87$var$addToShoppingListButton","$2fb3e2c4b883af87$var$selectedBook","$2fb3e2c4b883af87$var$handleBookClick","e","target","contains","id","closest","showLoader","setTimeout","disableLoader","$2fb3e2c4b883af87$var$fetchSpecificBook","addEventListener","$2fb3e2c4b883af87$var$closeModalOnEscape","key","$2fb3e2c4b883af87$var$getShoppingList","shoppingListJson","localStorage","getItem","JSON","parse","shoppingList","some","book","_id","updatedShoppingListJson","stringify","filter","setItem","textContent","push","url","res","fetch","data","json","author","title","description","book_image","amazon_product_url","setAttribute"],"version":3,"file":"index.6f51ff68.js.map"}