{"mappings":"ACAA,SAAS,gBAAgB,CAAC,mBAAoB,WAE5C,IAAM,EAAmB,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,kBAAoB,EAAE,CAEzE,EAAwB,SAAS,cAAc,CAAC,gBAElD,AAA4B,CAAA,IAA5B,EAAiB,MAAM,CAEzB,EAAsB,SAAS,CAC7B,uFAGF,EAAiB,OAAO,CAAC,AAAA,IACvB,IAAM,EAAW,AAMrB,SAAwB,CAAI,EAC1B,IAAM,EAAO,SAAS,aAAa,CAAC,OAiCpC,OAhCA,EAAK,SAAS,CAAC,GAAG,CAAC,uBAGnB,EAAK,SAAS,CAAG,CAAC;;sCAEgB,EAAE,EAAK,UAAU,CAAC,OAAO,EAAE,EAAK,KAAK,CAAC;;;;;;0CAMlC,EAAE,EAAK,KAAK,CAAC;6CACV,EAAE,EAAK,SAAS,CAAC;;;mFAGqB,EAAE,EAAK,GAAG,CAAC;;;;;;oCAM1D,EAAE,EAAK,WAAW,CAAC;;mCAEpB,EAAE,EAAK,MAAM,CAAC;;;yBAGxB,EAAE,EAAK,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC;;;;YAIrC,CAAC,CAEF,CACT,EAzCoC,GAChC,EAAsB,WAAW,CAAC,EACpC,GA0CF,SAAS,sBAAsB,CAAG,SAAU,CAAM,EAEhD,IAAM,EAAsB,EAAiB,MAAM,CAAC,AAAA,GAAQ,EAAK,GAAG,GAAK,GAGzE,aAAa,OAAO,CAAC,eAAgB,KAAK,SAAS,CAAC,IAEpD,SAAS,MAAM,EACjB,CACF","sources":["<anon>","src/js/shopping-list.mjs"],"sourcesContent":["var $c09ccec0d70cbb24$exports = {};\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    // Sprawdzam, czy localStorage zawiera dane o książkach w koszyku lub zwracam pustą tablicę, jeśli w local storage nic nie ma\n    const shoppingListData = JSON.parse(localStorage.getItem(\"shoppingList\")) || [];\n    const shoppingListContainer = document.getElementById(\"shopping-list\");\n    if (shoppingListData.length === 0) // Wyświetlam komunikat w przypadku, jeśli koszyk jest pusty\n    shoppingListContainer.innerHTML = '<p class=\"sl-paragraph\">This page is empty, add some books and proceed to order.</p>';\n    else // Wyświetlam każdą książkę z koszyka\n    shoppingListData.forEach((book)=>{\n        const bookCard = createBookCard(book);\n        shoppingListContainer.appendChild(bookCard);\n    });\n    // Tworzę kartę dla książki w koszyku\n    function createBookCard(book) {\n        const card = document.createElement(\"div\");\n        card.classList.add(\"book-card-container\");\n        // Dodaję wymagane informacje o książce\n        card.innerHTML = `\n        <div class=\"image-container\">\n         <img class=\"book-image\" src=\"${book.book_image}\" alt=\"${book.title} Cover\"/>\n        </div>\n\n      <div class=\"text-container\">\n          <div class=\"book-card-header\">\n              <div class=\"card-title-container\">\n                    <p class=\"book-title\">${book.title}</p>\n                    <p class=\"book-category\">${book.list_name}</p>\n              </div>\n             <div>\n                    <button class=\"remove-button\" onclick=\"removeFromShoppingList('${book._id}')\">\n                    <svg class=\"remove-button-item\"><use href=\"./images/icons.svg#icon-trash-03\"></use></svg>\n                    </button>\n              </div>\n          </div>\n\n        <p class=\"book-description\">${book.description}</p>\n\n          <div class=\"book-author\">${book.author}</div>\n          \n          <div class=\"purchase-links\">\n                <a href=\"${book.buy_links[0].url}\">\n                    LINK\n                </a>\n          </div> \n      </div>`;\n        return card;\n    }\n    //funkcja do usuwania książki z koszyka\n    document.removeFromShoppingList = function(bookId) {\n        //Funkcja filter() zwraca nową tablicę, która zawiera odfiltrowane elementy\n        const updatedShoppingList = shoppingListData.filter((book)=>book._id !== bookId);\n        //Zapisuję zaktualizowaną listę zakupów do localStorage pod kluczem \"shoppingList\"\n        localStorage.setItem(\"shoppingList\", JSON.stringify(updatedShoppingList));\n        // Przeładuj stronę, aby odświeżyć listę. Bez tego kroku użytkownik musiałby samodzielnie odświeżyć stronę, żeby zobaczyć zmiany.\n        location.reload();\n    };\n});\n\n\n//# sourceMappingURL=index.3edcaf2b.js.map\n","document.addEventListener('DOMContentLoaded', function () {\n  // Sprawdzam, czy localStorage zawiera dane o książkach w koszyku lub zwracam pustą tablicę, jeśli w local storage nic nie ma\n  const shoppingListData = JSON.parse(localStorage.getItem('shoppingList')) || [];\n\n  const shoppingListContainer = document.getElementById('shopping-list');\n\n  if (shoppingListData.length === 0) {\n    // Wyświetlam komunikat w przypadku, jeśli koszyk jest pusty\n    shoppingListContainer.innerHTML =\n      '<p class=\"sl-paragraph\">This page is empty, add some books and proceed to order.</p>';\n  } else {\n    // Wyświetlam każdą książkę z koszyka\n    shoppingListData.forEach(book => {\n      const bookCard = createBookCard(book);\n      shoppingListContainer.appendChild(bookCard);\n    });\n  }\n\n  // Tworzę kartę dla książki w koszyku\n  function createBookCard(book) {\n    const card = document.createElement('div');\n    card.classList.add('book-card-container');\n\n    // Dodaję wymagane informacje o książce\n    card.innerHTML = `\n        <div class=\"image-container\">\n         <img class=\"book-image\" src=\"${book.book_image}\" alt=\"${book.title} Cover\"/>\n        </div>\n\n      <div class=\"text-container\">\n          <div class=\"book-card-header\">\n              <div class=\"card-title-container\">\n                    <p class=\"book-title\">${book.title}</p>\n                    <p class=\"book-category\">${book.list_name}</p>\n              </div>\n             <div>\n                    <button class=\"remove-button\" onclick=\"removeFromShoppingList('${book._id}')\">\n                    <svg class=\"remove-button-item\"><use href=\"./images/icons.svg#icon-trash-03\"></use></svg>\n                    </button>\n              </div>\n          </div>\n\n        <p class=\"book-description\">${book.description}</p>\n\n          <div class=\"book-author\">${book.author}</div>\n          \n          <div class=\"purchase-links\">\n                <a href=\"${book.buy_links[0].url}\">\n                    LINK\n                </a>\n          </div> \n      </div>`;\n\n    return card;\n  }\n\n  //funkcja do usuwania książki z koszyka\n  document.removeFromShoppingList = function (bookId) {\n    //Funkcja filter() zwraca nową tablicę, która zawiera odfiltrowane elementy\n    const updatedShoppingList = shoppingListData.filter(book => book._id !== bookId);\n\n    //Zapisuję zaktualizowaną listę zakupów do localStorage pod kluczem \"shoppingList\"\n    localStorage.setItem('shoppingList', JSON.stringify(updatedShoppingList));\n    // Przeładuj stronę, aby odświeżyć listę. Bez tego kroku użytkownik musiałby samodzielnie odświeżyć stronę, żeby zobaczyć zmiany.\n    location.reload();\n  };\n});\n"],"names":["document","addEventListener","shoppingListData","JSON","parse","localStorage","getItem","shoppingListContainer","getElementById","length","innerHTML","forEach","book","bookCard","createBookCard","card","createElement","classList","add","book_image","title","list_name","_id","description","author","buy_links","url","appendChild","removeFromShoppingList","bookId","updatedShoppingList","filter","setItem","stringify","location","reload"],"version":3,"file":"index.3edcaf2b.js.map"}