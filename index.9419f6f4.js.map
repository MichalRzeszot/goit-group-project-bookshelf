{"mappings":"ACAA,SAAS,gBAAgB,CAAC,mBAAoB,WAE5C,IAAM,EAAmB,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,kBAAoB,EAAE,CAEzE,EAAwB,SAAS,cAAc,CAAC,gBAElD,AAA4B,CAAA,IAA5B,EAAiB,MAAM,CAEzB,EAAsB,SAAS,CAC7B,uFAGF,EAAiB,OAAO,CAAC,AAAA,IACvB,IAAM,EAAW,AAMrB,SAAwB,CAAI,EAC1B,IAAM,EAAO,SAAS,aAAa,CAAC,OAkBpC,OAjBA,EAAK,SAAS,CAAC,GAAG,CAAC,aAGnB,EAAK,SAAS,CAAG,CAAC;sBACA,EAAE,EAAK,UAAU,CAAC,OAAO,EAAE,EAAK,KAAK,CAAC;oCACxB,EAAE,EAAK,KAAK,CAAC;uCACV,EAAE,EAAK,SAAS,CAAC;0CACd,EAAE,EAAK,WAAW,CAAC;qCACxB,EAAE,EAAK,MAAM,CAAC;;;gBAGnC,EAAE,EAAK,SAAS,CAAC;;;qDAGoB,EAAE,EAAK,GAAG,CAAC;QACxD,CAAC,CAEE,CACT,EA1BoC,GAChC,EAAsB,WAAW,CAAC,EACpC,GA2BF,SAAS,sBAAsB,CAAG,SAAU,CAAM,EAEhD,IAAM,EAAsB,EAAiB,MAAM,CAAC,AAAA,GAAQ,EAAK,GAAG,GAAK,GAGzE,aAAa,OAAO,CAAC,eAAgB,KAAK,SAAS,CAAC,IAEpD,SAAS,MAAM,EACjB,CACF","sources":["<anon>","src/js/shopping-list.mjs"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function() {\n    // Sprawdzam, czy localStorage zawiera dane o książkach w koszyku lub zwracam pustą tablicę, jeśli w local storage nic nie ma\n    const shoppingListData = JSON.parse(localStorage.getItem(\"shoppingList\")) || [];\n    const shoppingListContainer = document.getElementById(\"shopping-list\");\n    if (shoppingListData.length === 0) // Wyświetlam komunikat w przypadku, jeśli koszyk jest pusty\n    shoppingListContainer.innerHTML = '<p class=\"sl-paragraph\">This page is empty, add some books and proceed to order.</p>';\n    else // Wyświetlam każdą książkę z koszyka\n    shoppingListData.forEach((book)=>{\n        const bookCard = createBookCard(book);\n        shoppingListContainer.appendChild(bookCard);\n    });\n    // Tworzę kartę dla książki w koszyku\n    function createBookCard(book) {\n        const card = document.createElement(\"div\");\n        card.classList.add(\"book-card\");\n        // Dodaję wymagane informacje o książce\n        card.innerHTML = `\n            <img src=\"${book.book_image}\" alt=\"${book.title} Cover\">\n            <div class=\"book-title\">${book.title}</div>\n            <div class=\"book-category\">${book.list_name}</div>\n            <div class=\"book-description\">${book.description}</div>\n            <div class=\"book-author\">${book.author}</div>\n            // dopracowa\\u{107} - poni\\u{17C}ej ma by\\u{107} lista link\\xf3w\n            <div class=\"purchase-links\">\n                ${book.buy_links}\n            </div> \n            // dopracowa\\u{107} - obrazek kosza powinien tutaj by\\u{107}\n            <button onclick=\"removeFromShoppingList('${book._id}')\">TRASH</button>\n        `;\n        return card;\n    }\n    // dopracowac - funkcja do usuwania książki z koszyka\n    document.removeFromShoppingList = function(bookId) {\n        //Funkcja filter() zwraca nową tablicę, która zawiera odfiltrowane elementy\n        const updatedShoppingList = shoppingListData.filter((book)=>book._id !== bookId);\n        //Zapisuję zaktualizowaną listę zakupów do localStorage pod kluczem \"shoppingList\"\n        localStorage.setItem(\"shoppingList\", JSON.stringify(updatedShoppingList));\n        // Przeładuj stronę, aby odświeżyć listę. Bez tego kroku użytkownik musiałby samodzielnie odświeżyć stronę, żeby zobaczyć zmiany.\n        location.reload();\n    };\n});\n\n//# sourceMappingURL=index.9419f6f4.js.map\n","document.addEventListener('DOMContentLoaded', function () {\n  // Sprawdzam, czy localStorage zawiera dane o książkach w koszyku lub zwracam pustą tablicę, jeśli w local storage nic nie ma\n  const shoppingListData = JSON.parse(localStorage.getItem('shoppingList')) || [];\n\n  const shoppingListContainer = document.getElementById('shopping-list');\n\n  if (shoppingListData.length === 0) {\n    // Wyświetlam komunikat w przypadku, jeśli koszyk jest pusty\n    shoppingListContainer.innerHTML =\n      '<p class=\"sl-paragraph\">This page is empty, add some books and proceed to order.</p>';\n  } else {\n    // Wyświetlam każdą książkę z koszyka\n    shoppingListData.forEach(book => {\n      const bookCard = createBookCard(book);\n      shoppingListContainer.appendChild(bookCard);\n    });\n  }\n\n  // Tworzę kartę dla książki w koszyku\n  function createBookCard(book) {\n    const card = document.createElement('div');\n    card.classList.add('book-card');\n\n    // Dodaję wymagane informacje o książce\n    card.innerHTML = `\n            <img src=\"${book.book_image}\" alt=\"${book.title} Cover\">\n            <div class=\"book-title\">${book.title}</div>\n            <div class=\"book-category\">${book.list_name}</div>\n            <div class=\"book-description\">${book.description}</div>\n            <div class=\"book-author\">${book.author}</div>\n            // dopracować - poniżej ma być lista linków\n            <div class=\"purchase-links\">\n                ${book.buy_links}\n            </div> \n            // dopracować - obrazek kosza powinien tutaj być\n            <button onclick=\"removeFromShoppingList('${book._id}')\">TRASH</button>\n        `;\n\n    return card;\n  }\n\n  // dopracowac - funkcja do usuwania książki z koszyka\n  document.removeFromShoppingList = function (bookId) {\n    //Funkcja filter() zwraca nową tablicę, która zawiera odfiltrowane elementy\n    const updatedShoppingList = shoppingListData.filter(book => book._id !== bookId);\n\n    //Zapisuję zaktualizowaną listę zakupów do localStorage pod kluczem \"shoppingList\"\n    localStorage.setItem('shoppingList', JSON.stringify(updatedShoppingList));\n    // Przeładuj stronę, aby odświeżyć listę. Bez tego kroku użytkownik musiałby samodzielnie odświeżyć stronę, żeby zobaczyć zmiany.\n    location.reload();\n  };\n});\n"],"names":["document","addEventListener","shoppingListData","JSON","parse","localStorage","getItem","shoppingListContainer","getElementById","length","innerHTML","forEach","book","bookCard","createBookCard","card","createElement","classList","add","book_image","title","list_name","description","author","buy_links","_id","appendChild","removeFromShoppingList","bookId","updatedShoppingList","filter","setItem","stringify","location","reload"],"version":3,"file":"index.9419f6f4.js.map"}